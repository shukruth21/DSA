//brute force check for every index if left sum = rigth sum
int findEquilibriumIndex(vector<int> &arr) {
    int n = arr.size();
    for (int i = 1; i < n - 1; i++) {
        int leftSum = 0, rightSum = 0;
        for (int j = 0; j < i; j++) {
            leftSum += arr[j];
        }
        for (int k = i + 1; k < n; k++) {
            rightSum += arr[k];
        }
        if (leftSum != 0 && rightSum != 0 && leftSum == rightSum) {
            return i;
        }

    }
    return -1;
}

//better approach calculate total sum and prefix sum array and find if the index is an equilibrium index
int findEquilibriumIndex(vector<int> &arr) {
    int n = arr.size();
    int arraySum = 0;
    for (int i = 0; i < n; i++) {
        arraySum += arr[i];
    }
    vector<int> prefSum(n);
    prefSum[0] = arr[0];
    for (int i = 1; i < n; i++) {
        prefSum[i] = prefSum[i - 1] + arr[i];
    }

    for (int i = 0; i < n; i++) {
        if (i == 0 && prefSum[n - 1] - prefSum[0] == 0) {
            return 0;
        }
        else if (prefSum[i - 1] == arraySum - prefSum[i - 1] - arr[i]) {
            return i;
        }
    }
    return -1;
}
